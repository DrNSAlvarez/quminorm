% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nblomax.R
\name{dnblomax}
\alias{dnblomax}
\title{Negative binomial-Lomax PMF}
\usage{
dnblomax(x, tail = 1, scale = 1, shape = 1, log = FALSE, quadpts = 1000)
}
\arguments{
\item{x}{a vector of (non-negative integer) quantiles.}

\item{tail}{a positive scalar controlling the heaviness of the Lomax tail.}

\item{scale}{a positive scalar.}

\item{shape}{a positive scalar negative binomial parameter; can be Inf.}

\item{log}{logical; if TRUE, probabilities p are given as log(p).}

\item{quadpts}{either a single integer determining the number of quadrature
points, or a list resulting from
statmod::gauss.quad.prob(m, dist="uniform", l=0, u=1)
where m is the number of quadrature points.}
}
\value{
a vector of (log) probabilities
}
\description{
Compute probability mass function of a negative binomial
distribution with mean parameter distributed as Lomax.
}
\details{
This function computes the likelihood the data x was generated
from the model mu~Lomax(tail,scale), x~negative binomial(shape,mu).
If the shape parameter is Inf this is a Poisson-Lomax model. If shape is 1,
it is a geometric-Lomax model. The Lomax mixing distribution induces
a heavy power-law tail with exponent (1+tail). The smaller the tail
parameter, the heavier the tail of the distribution. If tail<=1 there is no
mean, if tail<2 there is no variance. A larger scale parameter means fewer
zeros and more large values. Shape and scale have no effect on the
power-law tail. If quadpts is a number, the quadrature points are
recomputed based on current parameter values. If quadpts is a list, we
assume it is the result of a call to
quadpts<-statmod::gauss.quad.prob(m, dist="uniform", l=0, u=1)
where m is the number of quadrature points, ie that the quadpts are
pre-computed based on the Uniform(0,1) distribution.
}
\seealso{
rlomax
}
