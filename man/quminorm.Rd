% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quminorm_user_function.R
\name{quminorm}
\alias{quminorm}
\title{Quantile normalization of a non-UMI read counts matrix}
\usage{
quminorm(
  m,
  assayName = "tpm",
  shape = 2,
  lik = c("poilog", "plomax", "nb"),
  quadpts = 1000
)
}
\arguments{
\item{m}{A SingleCellExperiment, matrix or sparse Matrix of non-negative
integers (count data).}

\item{assayName}{In case m is a SingleCellExperiment, the assay from which
the quasi-UMIs should be calculated is specified here. NB! The default,
"TPM" for transcripts per million does refer to such values after
summarizing to gene level. The algorithm in its current form has not been
evaluated for quasi-UMI generation from transcript counts, as full-length
data with UMIs has not until very recently been available.}

\item{shape}{Positive scalar, a fixed shape parameter for the target
distribution. The shape parameter represents sigma, tail, and size for the
Poisson-lognormal, Poisson-Lomax, and negative binomial target
distributions, respectively. See \code{\link[sads]{dpoilog}},
\code{\link{dnblomax}}, or \code{\link[stats]{dnbinom}}.}

\item{lik}{likelihood of target distribution, either Poisson-lognormal
("poilog"), Poisson-Lomax ("plomax"), or negative binomial ("nb").}

\item{quadpts}{positive integer, number of quadrature points. Increase for
greater precision but slower computation.}
}
\value{
An object of same class as m but with the nonzero values normalized
to match the target quasi-UMI distribution. In case of a
SingleCellExperiment, the quasiUMI is added to a new asays slot named qumi.
}
\description{
Normalizes read counts (without UMIs) such as those generated by smart-seq2
to match a discrete quasi-UMI target distribution. The resulting QUMI counts
can be analyzed as if they were UMI counts.
}
\examples{
#First import a SingleCellExperiment
library(scRNAseq)
library(SingleCellExperiment)
sce <- ReprocessedAllenData("tophat_counts")
tpm(sce) <- assay(sce, "tophat_counts")

#Then run the function
sce <- quminorm(sce)

}
